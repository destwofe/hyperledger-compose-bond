/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// View Participante and Asset

rule PersonCanReadAllProfile {
  description: "Allow Persons read access there account"
  participant(p): "org.tbma.Account"
  operation: READ
  resource(r): "org.tbma.Account"
  condition: (p.getIdentifier() === r.getIdentifier())
  action: ALLOW
}

rule PersonCanReadAllBond {
  description: "Allow Persons read access to all bond"
  participant: "org.tbma.Account"
  operation: READ
  resource: "org.tbma.Bond"
  action: ALLOW
}

rule PersonCanReadAllBondWallet {
  description: "Allow Persons read access there bond wallet"
  participant(p): "org.tbma.Account"
  operation: READ
  resource(r): "org.tbma.BondWallet"
  condition: (p.getIdentifier() === r.owner.getIdentifier())
  action: ALLOW
}

rule PersonCanReadAllMoneyWallet {
  description: "Allow Persons read access there money wallet"
  participant(p): "org.tbma.Account"
  operation: READ
  resource(r): "org.tbma.MoneyWallet"
  condition: (p.getIdentifier() === r.owner.getIdentifier())
  action: ALLOW
}

// Asset Creation
rule ParticipantCanCreateBond {
  description: "Allow Participant can create Bond"
  participant(p): "org.tbma.Account"
  operation: CREATE
  resource(r): "org.tbma.Bond"
  condition: (r.totalSupply === 0 && p.getIdentifier() === r.issuer.getIdentifier() && p.getIdentifier() === r.issuerMoneyWallet.owner.getIdentifier())
  action: ALLOW
}

rule ParticipantCanCreateBondWallet {
  description: "Allow Participant can create Empty BondWallet"
  participant(p): "org.tbma.Account"
  operation: CREATE
  resource(r): "org.tbma.BondWallet"
  condition: (r.balance === 0 && p.getIdentifier() === r.owner.getIdentifier())
  action: ALLOW
}

rule ParticipantCanCreateMoneyWallet {
  description: "Allow Participant can create Empty MoneyWallet"
  participant(p): "org.tbma.Account"
  operation: CREATE
  resource(r): "org.tbma.MoneyWallet"
  condition: (r.balance === 0 && p.getIdentifier() === r.owner.getIdentifier())
  action: ALLOW
}

// Create Transaction
rule AccountCreateMoneyTransferTransaction {
  description: "Allow account to create money transfer transactions"
  participant: "org.tbma.Account"
  operation: CREATE
  resource: "org.tbma.MoneyTransferTransaction"
  action: ALLOW
}

rule AccountCreateBondTransferTransaction {
  description: "Allow account to create bond transfer transactions"
  participant: "org.tbma.Account"
  operation: CREATE
  resource: "org.tbma.BondTransferTransaction"
  action: ALLOW
}

rule AccountCreateBondPurchaseTransaction {
  description: "Allow account to create bond purchase transactions"
  participant: "org.tbma.Account"
  operation: CREATE
  resource: "org.tbma.BondPurchaseTransaction"
  action: ALLOW
}

// Update Via Transaction
rule AccountUpdateMoneyWalletViaMoneyTransferTransaction {
  description: "Allow account to update money wallet via money transfer transaction"
  participant(p): "org.tbma.Account"
  operation: UPDATE, READ
  resource: "org.tbma.MoneyWallet"
  transaction(tx): "org.tbma.MoneyTransferTransaction"
  condition: (p.getIdentifier() === tx.from.owner.getIdentifier())
  action: ALLOW
}

rule AccountUpdateBondWalletViaBondTransferTransaction {
  description: "Allow account to update money wallet via money transfer transaction"
  participant(p): "org.tbma.Account"
  operation: UPDATE, READ
  resource: "org.tbma.BondWallet"
  transaction(tx): "org.tbma.BondTransferTransaction"
  condition: (p.getIdentifier() === tx.from.owner.getIdentifier())
  action: ALLOW
}

rule AccountUpdateBondViaBondPurchaseTransaction {
  description: "Allow account to update bond via bond purchase transaction"
  participant(p): "org.tbma.Account"
  operation: UPDATE, READ
  resource: "org.tbma.Bond"
  transaction(tx): "org.tbma.BondPurchaseTransaction"
  condition: (p.getIdentifier() === tx.investorMoneyWallet.owner.getIdentifier())
  action: ALLOW
}

rule AccountUpdateBondWalletViaBondPurchaseTransaction {
  description: "Allow account to update bond wallet via bond purchase transaction"
  participant(p): "org.tbma.Account"
  operation: UPDATE, READ
  resource: "org.tbma.BondWallet"
  transaction(tx): "org.tbma.BondPurchaseTransaction"
  condition: (p.getIdentifier() === tx.investorMoneyWallet.owner.getIdentifier())
  action: ALLOW
}

rule AccountUpdateMoneyWalletViaBondPurchaseTransaction {
  description: "Allow account to update money wallet via bond purchase transaction"
  participant(p): "org.tbma.Account"
  operation: UPDATE, READ
  resource: "org.tbma.MoneyWallet"
  transaction(tx): "org.tbma.BondPurchaseTransaction"
  condition: (p.getIdentifier() === tx.investorMoneyWallet.owner.getIdentifier())
  action: ALLOW
}

// System

 rule SystemACL {
  description:  "System ACL to permit all access"
  participant: "org.hyperledger.composer.system.Participant"
  operation: ALL
  resource: "org.hyperledger.composer.system.**"
  action: ALLOW
}

// Network

rule NetworkAdminUser {
    description: "Grant business network administrators full access to user resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "**"
    action: ALLOW
}

rule NetworkAdminSystem {
    description: "Grant business network administrators full access to system resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "org.hyperledger.composer.system.**"
    action: ALLOW
}
